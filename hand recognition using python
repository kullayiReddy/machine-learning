//Hand recognition for physically challenged  
import cv2
# mediapipe provides the skeletal structure of hands
import mediapipe as mp
import time
mp_hands= mp.solutions.hands
hands = mp_hands.Hands()
mp_draw = mp.solutions.drawing_utils
cap = cv2.VideoCapture(0)
time.sleep(20)
finger_tips=[8,12,16,20]
while True:
		ret, img = cap.read()
		img =cv2.flip(img,1)
		h , w, c = img.shape
		results= hands.process(img)
		coordinates = (100,100)
		font = cv2.FONT_HERSHEY_SIMPLEX
		fontScale = 1
		color = (255,0,255)
		thickness = 2
		if results.multi_hand_landmarks:
			for hand_landmark in results.multi_hand_landmarks:
				lm_list=[]
				for id, lm in enumerate(hand_landmark.landmark):
						lm_list.append(lm)
				finger_fold=[]
				for tip in finger_tips:
# we use coordinate geometry in order to find the coordinates of the
fingers
					x, y = int(lm_list[tip].x*w),int( lm_list[tip].y*h)
#print(id, ":", int(lm.x*w),int( lm.y*h))
					cv2.circle(img, (x,y), 15, (255, 0, 0), cv2.FILLED)
					if (lm_list[20].x<lm_list[17].x and lm_list[16].x<lm_list[13].x and
lm_list[12].x<lm_list[9].x and lm_list[8].x<lm_list[5].x and
lm_list[4].y>lm_list[3].y>lm_list[2].y>lm_list[1].y):
							print("Like")
'''image=cv2.putText(img,"Like",coordinates,font,fontScale,color,thi
ckness)
cv2.imshow("Like", img)'''
							continue
					elif (lm_list[4].x==lm_list[8].x and
lm_list[12].y>lm_list[11].y>lm_list[10].y and lm_list[16].y>lm_list[15].y>lm_list[14].y
and lm_list[20].y>lm_list[19].y>lm_list[18].y ):
							print("Superb")
'''image=cv2.putText(img,"Superb",coordinates,font,fontScale,color,t
hickness)
cv2.imshow("Superb", img)'''
							continue
					elif(lm_list[4].x>lm_list[9].x and
lm_list[8].y>lm_list[7].y>lm_list[6].y and lm_list[12].y>lm_list[11].y>lm_list[10].y and
lm_list[16].y<lm_list[13].y and lm_list[20].y<lm_list[17].y ):
							print("Peace")
'''image=cv2.putText(img,"Peace",coordinates,font,fontScale,color,th
ickness)
cv2.imshow("Peace", img)'''
							continue
					elif(lm_list[8].y>lm_list[7].y>lm_list[6].y and
lm_list[20].y>lm_list[19].y>lm_list[18].y and
lm_list[4].y>lm_list[3].y>lm_list[2].y>lm_list[1].y and lm_list[16].y<lm_list[13].y and
lm_list[12].y<lm_list[9].y):
							print("Rock")
'''image=cv2.putText(img,"Rock",coordinates,font,fontScale,color,thi
ckness)
cv2.imshow("Rock", img)'''
							continue
					elif(lm_list[20].x>lm_list[17].x and lm_list[16].x>lm_list[13].x and
lm_list[12].x>lm_list[9].x and lm_list[8].x>lm_list[5].x and
lm_list[4].y<lm_list[3].y<lm_list[2].y<lm_list[1].y):
							print("Dislike")
'''image=cv2.putText(img,"Dislike",coordinates,font,fontScale,color,
thickness)
cv2.imshow("Dislike", img)'''
							continue
					elif(lm_list[20].y<lm_list[17].y and lm_list[16].y<lm_list[13].y and
lm_list[12].y<lm_list[9].y and lm_list[8].y>lm_list[7].y>lm_list[6].y>lm_list[5].y and
lm_list[4].x>lm_list[3].x>lm_list[2].x>lm_list[1].x):
							print("Smile")
'''image=cv2.putText(img,"Smile",coordinates,font,fontScale,color,th
ickness)
cv2.imshow("Smile", img)'''
							break
			mp_draw.draw_landmarks(img, hand_landmark, mp_hands.HAND_CONNECTIONS,
mp_draw.DrawingSpec((0,0,255),2,2), mp_draw.DrawingSpec((0,255, 0), 4,2))
	cv2.imshow("Hand Tracking", img)
	cv2.waitKey(1)
